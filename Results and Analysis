## Results & Analysis

### Step 1. Data Preparation
Following links are the galaxy links with uploaded datasets:
https://zenodo.org/record/3243160/files/father_R1.fq.gz
https://zenodo.org/record/3243160/files/father_R2.fq.gz
https://zenodo.org/record/3243160/files/mother_R1.fq.gz
https://zenodo.org/record/3243160/files/mother_R2.fq.gz
https://zenodo.org/record/3243160/files/proband_R1.fq.gz
https://zenodo.org/record/3243160/files/proband_R2.fq.gz

### Step 2: Quality Control
In this project, after uploading datasets, quality check was performed for using FastQC tool. The FastQC tool gave the output with a good Phred score, which signifies those reads are of good quality. The following are the output of FastQC tool:

<p align="center">
<br>
<img src="https://user-images.githubusercontent.com/88246395/130108265-eef93927-6cc3-4f58-8dff-b9831c5f984f.JPG" width="300" height="200"> <img src="https://user-images.githubusercontent.com/88246395/130127346-c49aec0f-3c11-4ced-b118-3d58a1f5b404.JPG" width="300" height="200"> <img src="https://user-images.githubusercontent.com/88246395/130127639-9f4dd1d7-4c7b-4735-9789-b39ddf5ed309.JPG" width="300" height="200">
<img src="https://user-images.githubusercontent.com/88246395/130127772-78098874-9e78-4ebf-98d3-71536e146d8e.JPG" width="300" height="200"> <img src="https://user-images.githubusercontent.com/88246395/130128355-e6fadbf6-9681-4bdc-bb55-54a260d3eeb1.JPG" width="300" height="200">  <img src="https://user-images.githubusercontent.com/88246395/130128364-72bb730a-4b8a-488f-a053-aa90be8d6681.JPG" width="300" height="200">
<br>
	<br>
	</p>
	
MultiQC tool was used to aggregate the results from FastQC into a single report. The following is the report generated by MiltiQC tool: [Click Here](https://usegalaxy.eu/datasets/11ac94870d0bb33af4176bff93c8de30/display/?preview=True)
<p align="center">
<br>
<img src="https://user-images.githubusercontent.com/88246395/130129607-b3b1f5a9-ad37-45a9-82e5-383aaa777f9f.JPG" width="700" height="300">
<img src="https://user-images.githubusercontent.com/88246395/130129610-5fd62865-7ef9-4433-8708-81f6e8d9d2dc.JPG" width="700" height="300">
<img src="https://user-images.githubusercontent.com/88246395/130129612-8c1f6219-0807-4033-8a42-e013c6f67a3e.JPG" width="700" height="300">
<br>
	<br>
	</p>

### Step 3: Adapter Trimming
Following are the trimmed datasets:
- Trimmed Father_R1:[Click Here](https://usegalaxy.eu/datasets/11ac94870d0bb33ab83cb16072f2cfd2/display/?preview=True)
- Trimmed Father_R2:[Click Here](https://usegalaxy.eu/datasets/11ac94870d0bb33aa3d66e5af8b06ee8/display/?preview=True)
- Trimmed Mother_R1:[Click Here](https://usegalaxy.eu/datasets/11ac94870d0bb33a4f2a3d32a434c73c/display/?preview=True)
- Trimmed Mother_R2:[Click Here](https://usegalaxy.eu/datasets/11ac94870d0bb33a4f2a3d32a434c73c/display/?preview=True)
- Trimmed Proband_R1:[Click Here](https://usegalaxy.eu/datasets/11ac94870d0bb33a294066e19e357af4/display/?preview=True)
- Trimmed Proband_R2:[Click Here](https://usegalaxy.eu/datasets/11ac94870d0bb33a9f3e07eaab3e8ad7/display/?preview=True)

### Step 4: Read Mapping
Mapping was performed using Map with BWA-MEM tool on fathers, mother’s and proband’s datasets with reference genome [hg19](https://zenodo.org/record/3243160/files/hg19_chr8.fa.gz). The following is the BAM file geneerated after mapping:
- Mapped Father datasets: [BAM File](https://usegalaxy.eu/datasets/11ac94870d0bb33a97c7cc9f6a20ec8e/display/?preview=True)
- Mapped Mother datasets: [BAM File](https://usegalaxy.eu/datasets/11ac94870d0bb33a29eea5237162eedf/display/?preview=True)
- Mapped Proband datasets: [BAM File](https://usegalaxy.eu/datasets/11ac94870d0bb33a82f28b9314631865/display/?preview=True)
<p align="center">
<br>
<img src="https://user-images.githubusercontent.com/88246395/130130162-9d1e268c-7d2f-41d4-9318-db1ecff964e8.JPG" width="700" height="300">
<br>
	<br>
	</p>

### Step 5: Mapped reads Post-processing
Mapped reads post-processing was performed to filter mapped reads and remove duplicate reads using Filter SAM or BAM, output SAM or BAM and RmDup tools respectively.
- Filtered Father reads: [Click Here](https://usegalaxy.eu/datasets/11ac94870d0bb33ace8620f7300404b4/display/?preview=True)
- Filtered Mother reads: [Click Here](https://usegalaxy.eu/datasets/11ac94870d0bb33a313db3454518c4eb/display/?preview=True)
- Filtered Proband reads: [Click Here](https://usegalaxy.eu/datasets/11ac94870d0bb33a5305c8e134859dd6/display/?preview=True)
- Remove duplicates from Fathers mapped reads: [Click Here](https://usegalaxy.eu/datasets/11ac94870d0bb33ae709a02d2e968e08/display/?preview=True)
- Remove duplicates from Mothers mapped reads: [Click Here](https://usegalaxy.eu/datasets/11ac94870d0bb33a99de7a73c89c41a2/display/?preview=True)
- Remove duplicates from Probands mapped reads: [Click Here](https://usegalaxy.eu/datasets/11ac94870d0bb33a14dd7ce3d152585d/display/?preview=True)
<br>

### Step 6: Variant calling
FreeBayes tool was used to call variants, which specifically finds SNPs, MNPs and Indels. The following is the VCF file output generated by FreeBayes tool: [VCF File](https://usegalaxy.eu/datasets/11ac94870d0bb33abfed7987f666ad78/display/?preview=True)
<p align="center">
<br>
<img src="https://user-images.githubusercontent.com/88246395/130131739-0c1fa7d9-d7d3-40c3-b982-dbea7697d7d9.jpg" width="700" height="300">
<br>
	<br>
	</p>

### Step 7: FreeBayes Post-processing
Post-processing FreeBayes calls was performed using bcftools norm, which normalizes indels and split multiallelic sites into multiple rows. The output of bcftools [Click Here](https://usegalaxy.eu/datasets/11ac94870d0bb33a8b119dfa8fbc57e5/display/?preview=True)
<br>
<br>

### Step 8: Variant Annotation
For variant annotation, SnpEff eff tool and SnpSift tool were used. 
- The following outputs were generated by SnpEff tool: [VCF File](https://usegalaxy.eu/datasets/11ac94870d0bb33a1c834c7cd24872a9/display/?preview=True) and [HTML File](https://usegalaxy.eu/datasets/11ac94870d0bb33a7494d8b78e339fa9/display/?preview=True)
- The outputs generated by SnpSift variant type tool were: [VCF File](https://usegalaxy.eu/datasets/11ac94870d0bb33aae1a1698a1085243/display/?preview=True) and [Log File](https://usegalaxy.eu/datasets/11ac94870d0bb33aa523d322c9cec1c5/display/?preview=True)
<p align="center">
<br>
<img src="https://user-images.githubusercontent.com/88246395/130132978-f990735e-5d51-420e-9d02-27df96e5bcca.JPG" width="700" height="300">
<img src="https://user-images.githubusercontent.com/88246395/130132988-9418111a-825f-49c3-bc1f-f55dd7d6fd1f.JPG" width="150" height="300"> 
<img src="https://user-images.githubusercontent.com/88246395/130132990-7be4dd60-3015-49f6-b4ec-495f969c042d.JPG" width="550" height="300">
<br>
	<br>
	</p>


### Step 9: Generate GEMINI Database
The combined variant extraction/annotation/storage step was performed on SnpEff-annotated VCF by the GEMINI load tool. The output generated was [gemini.sqlite](https://usegalaxy.eu/datasets/11ac94870d0bb33a4d715cac7a041cb3/display/?preview=True)


### Step 10: Candidate Variant Detection
The inheritance pattern of the causative variants or candidate variant detection was performed using GEMINI inheritance pattern tool, which gave the following output file: [Tabular File](https://usegalaxy.eu/datasets/11ac94870d0bb33a87afa37da3585f2d/display/?preview=True) 
<p align="center">
<br>
<img src="https://user-images.githubusercontent.com/88246395/130135237-3a3f08d0-9694-4013-a4f1-1a5af6beb614.JPG" width="700" height="300">
<img src="https://user-images.githubusercontent.com/88246395/130139126-b2633e5e-f77a-4306-9d24-4bde37d769a9.JPG" width="500" height="150">

<br>
	<br>
	</p>

## Conclusion
It is concluded from the study that the following variants in the respective genes were detected which may cause Genetic Disorders:
- C>T 6479041 (MCPH1)
- C>G 19819723 (LPL)
- T>C 27324821 (CHRNA2)
- T>C 145639725 (SLC39A4)
